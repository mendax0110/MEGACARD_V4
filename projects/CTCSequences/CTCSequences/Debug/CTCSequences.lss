
CTCSequences.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000302  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  00000302  00000376  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000037a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000003e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000064a  00000000  00000000  00000420  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005b3  00000000  00000000  00000a6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000234  00000000  00000000  0000101d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000009c  00000000  00000000  00001254  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000362  00000000  00000000  000012f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000de  00000000  00000000  00001652  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001730  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 41 00 	jmp	0x82	; 0x82 <__vector_19>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e0       	ldi	r30, 0x02	; 2
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 91 00 	call	0x122	; 0x122 <main>
  7a:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__vector_19>:
#define MIN_FREQ 30
#define MAX_FREQ 70

// ISR for the timer0
ISR(TIMER0_COMP_vect)
{
  82:	1f 92       	push	r1
  84:	0f 92       	push	r0
  86:	0f b6       	in	r0, 0x3f	; 63
  88:	0f 92       	push	r0
  8a:	11 24       	eor	r1, r1
  8c:	2f 93       	push	r18
  8e:	3f 93       	push	r19
  90:	4f 93       	push	r20
  92:	5f 93       	push	r21
  94:	6f 93       	push	r22
  96:	7f 93       	push	r23
  98:	8f 93       	push	r24
  9a:	9f 93       	push	r25
  9c:	af 93       	push	r26
  9e:	bf 93       	push	r27
  a0:	ef 93       	push	r30
  a2:	ff 93       	push	r31
	// Generate a random frequency within the range
	uint8_t freq = rand() % (MAX_FREQ - MIN_FREQ + 1) + MIN_FREQ;
  a4:	0e 94 2e 01 	call	0x25c	; 0x25c <rand>
  a8:	69 e2       	ldi	r22, 0x29	; 41
  aa:	70 e0       	ldi	r23, 0x00	; 0
  ac:	0e 94 98 00 	call	0x130	; 0x130 <__divmodhi4>
  b0:	82 5e       	subi	r24, 0xE2	; 226
	OCR0 = F_CPU / (2 * freq * 1024) - 1;
  b2:	28 2f       	mov	r18, r24
  b4:	30 e0       	ldi	r19, 0x00	; 0
  b6:	32 2f       	mov	r19, r18
  b8:	22 27       	eor	r18, r18
  ba:	33 0f       	add	r19, r19
  bc:	33 0f       	add	r19, r19
  be:	33 0f       	add	r19, r19
  c0:	03 2e       	mov	r0, r19
  c2:	00 0c       	add	r0, r0
  c4:	44 0b       	sbc	r20, r20
  c6:	55 0b       	sbc	r21, r21
  c8:	60 e0       	ldi	r22, 0x00	; 0
  ca:	7b e1       	ldi	r23, 0x1B	; 27
  cc:	87 eb       	ldi	r24, 0xB7	; 183
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	0e 94 ac 00 	call	0x158	; 0x158 <__udivmodsi4>
  d4:	21 50       	subi	r18, 0x01	; 1
  d6:	2c bf       	out	0x3c, r18	; 60
	
	// toggle the LED
	PORTC ^= (1 << PC7);
  d8:	85 b3       	in	r24, 0x15	; 21
  da:	80 58       	subi	r24, 0x80	; 128
  dc:	85 bb       	out	0x15, r24	; 21
}
  de:	ff 91       	pop	r31
  e0:	ef 91       	pop	r30
  e2:	bf 91       	pop	r27
  e4:	af 91       	pop	r26
  e6:	9f 91       	pop	r25
  e8:	8f 91       	pop	r24
  ea:	7f 91       	pop	r23
  ec:	6f 91       	pop	r22
  ee:	5f 91       	pop	r21
  f0:	4f 91       	pop	r20
  f2:	3f 91       	pop	r19
  f4:	2f 91       	pop	r18
  f6:	0f 90       	pop	r0
  f8:	0f be       	out	0x3f, r0	; 63
  fa:	0f 90       	pop	r0
  fc:	1f 90       	pop	r1
  fe:	18 95       	reti

00000100 <init_ports>:

// init the ports
void init_ports()
{
	DDRC |= (1 << PC7);		// LED 7 for Output LED		-> Info in ATMEGA16.PDF
 100:	84 b3       	in	r24, 0x14	; 20
 102:	80 68       	ori	r24, 0x80	; 128
 104:	84 bb       	out	0x14, r24	; 20
	DDRB |= (1 << PB3);		// OC0 - for Output Signal  -> Info in ATMEGA16.PDF
 106:	87 b3       	in	r24, 0x17	; 23
 108:	88 60       	ori	r24, 0x08	; 8
 10a:	87 bb       	out	0x17, r24	; 23
 10c:	08 95       	ret

0000010e <init_timer0_CTC>:
}

// init the timer0 in CTC mode
void init_timer0_CTC()
{
	TCCR0 |= (1 << COM00)|(1 << WGM01)|(1 << CS02)|(1<< CS00);		// (Info in ATMEGA16.PF S.129) Toggle-Mode, CTC-Mode 2, Clock division prescaler 1024
 10e:	83 b7       	in	r24, 0x33	; 51
 110:	8d 61       	ori	r24, 0x1D	; 29
 112:	83 bf       	out	0x33, r24	; 51
	OCR0 = 57; 	// look at the calcuations -> Calculations CTC (fout = fcpu/(2*(OCR0+1)*Vorteiler)
 114:	89 e3       	ldi	r24, 0x39	; 57
 116:	8c bf       	out	0x3c, r24	; 60
	TCNT0 = 0;	// reset the timer
 118:	12 be       	out	0x32, r1	; 50
	TIMSK |= (1 << OCIE0);	// enable the interrupt
 11a:	89 b7       	in	r24, 0x39	; 57
 11c:	82 60       	ori	r24, 0x02	; 2
 11e:	89 bf       	out	0x39, r24	; 57
 120:	08 95       	ret

00000122 <main>:
}

// main, init and loop
int main(void)
{
	cli();				// interrupt lock
 122:	f8 94       	cli
	init_ports();		// init the ports
 124:	0e 94 80 00 	call	0x100	; 0x100 <init_ports>
	init_timer0_CTC();	// init CTC
 128:	0e 94 87 00 	call	0x10e	; 0x10e <init_timer0_CTC>
	sei();				// interrupt release
 12c:	78 94       	sei
 12e:	ff cf       	rjmp	.-2      	; 0x12e <main+0xc>

00000130 <__divmodhi4>:
 130:	97 fb       	bst	r25, 7
 132:	07 2e       	mov	r0, r23
 134:	16 f4       	brtc	.+4      	; 0x13a <__divmodhi4+0xa>
 136:	00 94       	com	r0
 138:	07 d0       	rcall	.+14     	; 0x148 <__divmodhi4_neg1>
 13a:	77 fd       	sbrc	r23, 7
 13c:	09 d0       	rcall	.+18     	; 0x150 <__divmodhi4_neg2>
 13e:	0e 94 ce 00 	call	0x19c	; 0x19c <__udivmodhi4>
 142:	07 fc       	sbrc	r0, 7
 144:	05 d0       	rcall	.+10     	; 0x150 <__divmodhi4_neg2>
 146:	3e f4       	brtc	.+14     	; 0x156 <__divmodhi4_exit>

00000148 <__divmodhi4_neg1>:
 148:	90 95       	com	r25
 14a:	81 95       	neg	r24
 14c:	9f 4f       	sbci	r25, 0xFF	; 255
 14e:	08 95       	ret

00000150 <__divmodhi4_neg2>:
 150:	70 95       	com	r23
 152:	61 95       	neg	r22
 154:	7f 4f       	sbci	r23, 0xFF	; 255

00000156 <__divmodhi4_exit>:
 156:	08 95       	ret

00000158 <__udivmodsi4>:
 158:	a1 e2       	ldi	r26, 0x21	; 33
 15a:	1a 2e       	mov	r1, r26
 15c:	aa 1b       	sub	r26, r26
 15e:	bb 1b       	sub	r27, r27
 160:	fd 01       	movw	r30, r26
 162:	0d c0       	rjmp	.+26     	; 0x17e <__udivmodsi4_ep>

00000164 <__udivmodsi4_loop>:
 164:	aa 1f       	adc	r26, r26
 166:	bb 1f       	adc	r27, r27
 168:	ee 1f       	adc	r30, r30
 16a:	ff 1f       	adc	r31, r31
 16c:	a2 17       	cp	r26, r18
 16e:	b3 07       	cpc	r27, r19
 170:	e4 07       	cpc	r30, r20
 172:	f5 07       	cpc	r31, r21
 174:	20 f0       	brcs	.+8      	; 0x17e <__udivmodsi4_ep>
 176:	a2 1b       	sub	r26, r18
 178:	b3 0b       	sbc	r27, r19
 17a:	e4 0b       	sbc	r30, r20
 17c:	f5 0b       	sbc	r31, r21

0000017e <__udivmodsi4_ep>:
 17e:	66 1f       	adc	r22, r22
 180:	77 1f       	adc	r23, r23
 182:	88 1f       	adc	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	1a 94       	dec	r1
 188:	69 f7       	brne	.-38     	; 0x164 <__udivmodsi4_loop>
 18a:	60 95       	com	r22
 18c:	70 95       	com	r23
 18e:	80 95       	com	r24
 190:	90 95       	com	r25
 192:	9b 01       	movw	r18, r22
 194:	ac 01       	movw	r20, r24
 196:	bd 01       	movw	r22, r26
 198:	cf 01       	movw	r24, r30
 19a:	08 95       	ret

0000019c <__udivmodhi4>:
 19c:	aa 1b       	sub	r26, r26
 19e:	bb 1b       	sub	r27, r27
 1a0:	51 e1       	ldi	r21, 0x11	; 17
 1a2:	07 c0       	rjmp	.+14     	; 0x1b2 <__udivmodhi4_ep>

000001a4 <__udivmodhi4_loop>:
 1a4:	aa 1f       	adc	r26, r26
 1a6:	bb 1f       	adc	r27, r27
 1a8:	a6 17       	cp	r26, r22
 1aa:	b7 07       	cpc	r27, r23
 1ac:	10 f0       	brcs	.+4      	; 0x1b2 <__udivmodhi4_ep>
 1ae:	a6 1b       	sub	r26, r22
 1b0:	b7 0b       	sbc	r27, r23

000001b2 <__udivmodhi4_ep>:
 1b2:	88 1f       	adc	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	5a 95       	dec	r21
 1b8:	a9 f7       	brne	.-22     	; 0x1a4 <__udivmodhi4_loop>
 1ba:	80 95       	com	r24
 1bc:	90 95       	com	r25
 1be:	bc 01       	movw	r22, r24
 1c0:	cd 01       	movw	r24, r26
 1c2:	08 95       	ret

000001c4 <do_rand>:
 1c4:	8f 92       	push	r8
 1c6:	9f 92       	push	r9
 1c8:	af 92       	push	r10
 1ca:	bf 92       	push	r11
 1cc:	cf 92       	push	r12
 1ce:	df 92       	push	r13
 1d0:	ef 92       	push	r14
 1d2:	ff 92       	push	r15
 1d4:	cf 93       	push	r28
 1d6:	df 93       	push	r29
 1d8:	ec 01       	movw	r28, r24
 1da:	68 81       	ld	r22, Y
 1dc:	79 81       	ldd	r23, Y+1	; 0x01
 1de:	8a 81       	ldd	r24, Y+2	; 0x02
 1e0:	9b 81       	ldd	r25, Y+3	; 0x03
 1e2:	61 15       	cp	r22, r1
 1e4:	71 05       	cpc	r23, r1
 1e6:	81 05       	cpc	r24, r1
 1e8:	91 05       	cpc	r25, r1
 1ea:	21 f4       	brne	.+8      	; 0x1f4 <do_rand+0x30>
 1ec:	64 e2       	ldi	r22, 0x24	; 36
 1ee:	79 ed       	ldi	r23, 0xD9	; 217
 1f0:	8b e5       	ldi	r24, 0x5B	; 91
 1f2:	97 e0       	ldi	r25, 0x07	; 7
 1f4:	2d e1       	ldi	r18, 0x1D	; 29
 1f6:	33 ef       	ldi	r19, 0xF3	; 243
 1f8:	41 e0       	ldi	r20, 0x01	; 1
 1fa:	50 e0       	ldi	r21, 0x00	; 0
 1fc:	0e 94 3e 01 	call	0x27c	; 0x27c <__divmodsi4>
 200:	49 01       	movw	r8, r18
 202:	5a 01       	movw	r10, r20
 204:	9b 01       	movw	r18, r22
 206:	ac 01       	movw	r20, r24
 208:	a7 ea       	ldi	r26, 0xA7	; 167
 20a:	b1 e4       	ldi	r27, 0x41	; 65
 20c:	0e 94 5d 01 	call	0x2ba	; 0x2ba <__muluhisi3>
 210:	6b 01       	movw	r12, r22
 212:	7c 01       	movw	r14, r24
 214:	ac ee       	ldi	r26, 0xEC	; 236
 216:	b4 ef       	ldi	r27, 0xF4	; 244
 218:	a5 01       	movw	r20, r10
 21a:	94 01       	movw	r18, r8
 21c:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <__mulohisi3>
 220:	dc 01       	movw	r26, r24
 222:	cb 01       	movw	r24, r22
 224:	8c 0d       	add	r24, r12
 226:	9d 1d       	adc	r25, r13
 228:	ae 1d       	adc	r26, r14
 22a:	bf 1d       	adc	r27, r15
 22c:	b7 ff       	sbrs	r27, 7
 22e:	03 c0       	rjmp	.+6      	; 0x236 <__EEPROM_REGION_LENGTH__+0x36>
 230:	01 97       	sbiw	r24, 0x01	; 1
 232:	a1 09       	sbc	r26, r1
 234:	b0 48       	sbci	r27, 0x80	; 128
 236:	88 83       	st	Y, r24
 238:	99 83       	std	Y+1, r25	; 0x01
 23a:	aa 83       	std	Y+2, r26	; 0x02
 23c:	bb 83       	std	Y+3, r27	; 0x03
 23e:	9f 77       	andi	r25, 0x7F	; 127
 240:	df 91       	pop	r29
 242:	cf 91       	pop	r28
 244:	ff 90       	pop	r15
 246:	ef 90       	pop	r14
 248:	df 90       	pop	r13
 24a:	cf 90       	pop	r12
 24c:	bf 90       	pop	r11
 24e:	af 90       	pop	r10
 250:	9f 90       	pop	r9
 252:	8f 90       	pop	r8
 254:	08 95       	ret

00000256 <rand_r>:
 256:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <do_rand>
 25a:	08 95       	ret

0000025c <rand>:
 25c:	80 e6       	ldi	r24, 0x60	; 96
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <do_rand>
 264:	08 95       	ret

00000266 <srand>:
 266:	a0 e0       	ldi	r26, 0x00	; 0
 268:	b0 e0       	ldi	r27, 0x00	; 0
 26a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 26e:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 272:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 276:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 27a:	08 95       	ret

0000027c <__divmodsi4>:
 27c:	05 2e       	mov	r0, r21
 27e:	97 fb       	bst	r25, 7
 280:	1e f4       	brtc	.+6      	; 0x288 <__divmodsi4+0xc>
 282:	00 94       	com	r0
 284:	0e 94 55 01 	call	0x2aa	; 0x2aa <__negsi2>
 288:	57 fd       	sbrc	r21, 7
 28a:	07 d0       	rcall	.+14     	; 0x29a <__divmodsi4_neg2>
 28c:	0e 94 ac 00 	call	0x158	; 0x158 <__udivmodsi4>
 290:	07 fc       	sbrc	r0, 7
 292:	03 d0       	rcall	.+6      	; 0x29a <__divmodsi4_neg2>
 294:	4e f4       	brtc	.+18     	; 0x2a8 <__divmodsi4_exit>
 296:	0c 94 55 01 	jmp	0x2aa	; 0x2aa <__negsi2>

0000029a <__divmodsi4_neg2>:
 29a:	50 95       	com	r21
 29c:	40 95       	com	r20
 29e:	30 95       	com	r19
 2a0:	21 95       	neg	r18
 2a2:	3f 4f       	sbci	r19, 0xFF	; 255
 2a4:	4f 4f       	sbci	r20, 0xFF	; 255
 2a6:	5f 4f       	sbci	r21, 0xFF	; 255

000002a8 <__divmodsi4_exit>:
 2a8:	08 95       	ret

000002aa <__negsi2>:
 2aa:	90 95       	com	r25
 2ac:	80 95       	com	r24
 2ae:	70 95       	com	r23
 2b0:	61 95       	neg	r22
 2b2:	7f 4f       	sbci	r23, 0xFF	; 255
 2b4:	8f 4f       	sbci	r24, 0xFF	; 255
 2b6:	9f 4f       	sbci	r25, 0xFF	; 255
 2b8:	08 95       	ret

000002ba <__muluhisi3>:
 2ba:	0e 94 70 01 	call	0x2e0	; 0x2e0 <__umulhisi3>
 2be:	a5 9f       	mul	r26, r21
 2c0:	90 0d       	add	r25, r0
 2c2:	b4 9f       	mul	r27, r20
 2c4:	90 0d       	add	r25, r0
 2c6:	a4 9f       	mul	r26, r20
 2c8:	80 0d       	add	r24, r0
 2ca:	91 1d       	adc	r25, r1
 2cc:	11 24       	eor	r1, r1
 2ce:	08 95       	ret

000002d0 <__mulshisi3>:
 2d0:	b7 ff       	sbrs	r27, 7
 2d2:	0c 94 5d 01 	jmp	0x2ba	; 0x2ba <__muluhisi3>

000002d6 <__mulohisi3>:
 2d6:	0e 94 5d 01 	call	0x2ba	; 0x2ba <__muluhisi3>
 2da:	82 1b       	sub	r24, r18
 2dc:	93 0b       	sbc	r25, r19
 2de:	08 95       	ret

000002e0 <__umulhisi3>:
 2e0:	a2 9f       	mul	r26, r18
 2e2:	b0 01       	movw	r22, r0
 2e4:	b3 9f       	mul	r27, r19
 2e6:	c0 01       	movw	r24, r0
 2e8:	a3 9f       	mul	r26, r19
 2ea:	70 0d       	add	r23, r0
 2ec:	81 1d       	adc	r24, r1
 2ee:	11 24       	eor	r1, r1
 2f0:	91 1d       	adc	r25, r1
 2f2:	b2 9f       	mul	r27, r18
 2f4:	70 0d       	add	r23, r0
 2f6:	81 1d       	adc	r24, r1
 2f8:	11 24       	eor	r1, r1
 2fa:	91 1d       	adc	r25, r1
 2fc:	08 95       	ret

000002fe <_exit>:
 2fe:	f8 94       	cli

00000300 <__stop_program>:
 300:	ff cf       	rjmp	.-2      	; 0x300 <__stop_program>
