
AmpISR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000044c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00800060  00800060  000004c0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004c0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  0000052c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000634  00000000  00000000  0000055c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000585  00000000  00000000  00000b90  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000218  00000000  00000000  00001115  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000009c  00000000  00000000  00001330  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000036d  00000000  00000000  000013cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000107  00000000  00000000  00001739  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001840  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 a8 00 	jmp	0x150	; 0x150 <__vector_6>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__vector_14>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	aa 36       	cpi	r26, 0x6A	; 106
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 98 00 	call	0x130	; 0x130 <main>
  74:	0c 94 24 02 	jmp	0x448	; 0x448 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <__vector_14>:
volatile uint16_t adc_value;
volatile double voltage_in, voltage_out;

// ISR
ISR(ADC_vect)
{
  7c:	1f 92       	push	r1
  7e:	0f 92       	push	r0
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	0f 92       	push	r0
  84:	11 24       	eor	r1, r1
  86:	2f 93       	push	r18
  88:	3f 93       	push	r19
  8a:	4f 93       	push	r20
  8c:	5f 93       	push	r21
  8e:	6f 93       	push	r22
  90:	7f 93       	push	r23
  92:	8f 93       	push	r24
  94:	9f 93       	push	r25
  96:	af 93       	push	r26
  98:	bf 93       	push	r27
  9a:	ef 93       	push	r30
  9c:	ff 93       	push	r31
	adc_value = ADC;    // read ADC value
  9e:	84 b1       	in	r24, 0x04	; 4
  a0:	95 b1       	in	r25, 0x05	; 5
  a2:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  a6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	voltage_in = ((double)adc_value * 5.0) / 1023.0; // convert to voltage
  aa:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  ae:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	0e 94 29 01 	call	0x252	; 0x252 <__floatunsisf>
  ba:	20 e0       	ldi	r18, 0x00	; 0
  bc:	30 e0       	ldi	r19, 0x00	; 0
  be:	40 ea       	ldi	r20, 0xA0	; 160
  c0:	50 e4       	ldi	r21, 0x40	; 64
  c2:	0e 94 b7 01 	call	0x36e	; 0x36e <__mulsf3>
  c6:	20 e0       	ldi	r18, 0x00	; 0
  c8:	30 ec       	ldi	r19, 0xC0	; 192
  ca:	4f e7       	ldi	r20, 0x7F	; 127
  cc:	54 e4       	ldi	r21, 0x44	; 68
  ce:	0e 94 b7 00 	call	0x16e	; 0x16e <__divsf3>
  d2:	60 93 62 00 	sts	0x0062, r22	; 0x800062 <voltage_in>
  d6:	70 93 63 00 	sts	0x0063, r23	; 0x800063 <voltage_in+0x1>
  da:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <voltage_in+0x2>
  de:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <voltage_in+0x3>
	voltage_out = voltage_in * VOLTAGE_GAIN; // apply gain
  e2:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <voltage_in>
  e6:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <voltage_in+0x1>
  ea:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <voltage_in+0x2>
  ee:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <voltage_in+0x3>
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	40 ea       	ldi	r20, 0xA0	; 160
  f8:	50 e4       	ldi	r21, 0x40	; 64
  fa:	0e 94 b7 01 	call	0x36e	; 0x36e <__mulsf3>
  fe:	60 93 66 00 	sts	0x0066, r22	; 0x800066 <voltage_out>
 102:	70 93 67 00 	sts	0x0067, r23	; 0x800067 <voltage_out+0x1>
 106:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <voltage_out+0x2>
 10a:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <voltage_out+0x3>
}
 10e:	ff 91       	pop	r31
 110:	ef 91       	pop	r30
 112:	bf 91       	pop	r27
 114:	af 91       	pop	r26
 116:	9f 91       	pop	r25
 118:	8f 91       	pop	r24
 11a:	7f 91       	pop	r23
 11c:	6f 91       	pop	r22
 11e:	5f 91       	pop	r21
 120:	4f 91       	pop	r20
 122:	3f 91       	pop	r19
 124:	2f 91       	pop	r18
 126:	0f 90       	pop	r0
 128:	0f be       	out	0x3f, r0	; 63
 12a:	0f 90       	pop	r0
 12c:	1f 90       	pop	r1
 12e:	18 95       	reti

00000130 <main>:

int main(void)
{
	// set up ADC
	ADMUX = (1 << REFS0);   // use AVcc as the reference
 130:	80 e4       	ldi	r24, 0x40	; 64
 132:	87 b9       	out	0x07, r24	; 7
	ADCSRA = (1 << ADEN) | (1 << ADIE) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // enable ADC, enable interrupt, set prescaler to 128
 134:	8f e8       	ldi	r24, 0x8F	; 143
 136:	86 b9       	out	0x06, r24	; 6

	sei();  // enable interrupts
 138:	78 94       	sei

	// set up timer
	TCCR1B |= (1 << CS10) | (1 << WGM12); // set prescaler to 1 and CTC mode
 13a:	8e b5       	in	r24, 0x2e	; 46
 13c:	89 60       	ori	r24, 0x09	; 9
 13e:	8e bd       	out	0x2e, r24	; 46
	OCR1A = F_CPU / SAMPLE_RATE - 1;    // set compare match register
 140:	8f ea       	ldi	r24, 0xAF	; 175
 142:	94 e0       	ldi	r25, 0x04	; 4
 144:	9b bd       	out	0x2b, r25	; 43
 146:	8a bd       	out	0x2a, r24	; 42
	TIMSK |= (1 << OCIE1A);    // enable timer compare interrupt
 148:	89 b7       	in	r24, 0x39	; 57
 14a:	80 61       	ori	r24, 0x10	; 16
 14c:	89 bf       	out	0x39, r24	; 57
 14e:	ff cf       	rjmp	.-2      	; 0x14e <main+0x1e>

00000150 <__vector_6>:
		// do nothing
	}
}

ISR(TIMER1_COMPA_vect)
{
 150:	1f 92       	push	r1
 152:	0f 92       	push	r0
 154:	0f b6       	in	r0, 0x3f	; 63
 156:	0f 92       	push	r0
 158:	11 24       	eor	r1, r1
 15a:	8f 93       	push	r24
	ADCSRA |= (1 << ADSC);  // start ADC conversion
 15c:	86 b1       	in	r24, 0x06	; 6
 15e:	80 64       	ori	r24, 0x40	; 64
 160:	86 b9       	out	0x06, r24	; 6
 162:	8f 91       	pop	r24
 164:	0f 90       	pop	r0
 166:	0f be       	out	0x3f, r0	; 63
 168:	0f 90       	pop	r0
 16a:	1f 90       	pop	r1
 16c:	18 95       	reti

0000016e <__divsf3>:
 16e:	0e 94 cb 00 	call	0x196	; 0x196 <__divsf3x>
 172:	0c 94 7d 01 	jmp	0x2fa	; 0x2fa <__fp_round>
 176:	0e 94 76 01 	call	0x2ec	; 0x2ec <__fp_pscB>
 17a:	58 f0       	brcs	.+22     	; 0x192 <__divsf3+0x24>
 17c:	0e 94 6f 01 	call	0x2de	; 0x2de <__fp_pscA>
 180:	40 f0       	brcs	.+16     	; 0x192 <__divsf3+0x24>
 182:	29 f4       	brne	.+10     	; 0x18e <__divsf3+0x20>
 184:	5f 3f       	cpi	r21, 0xFF	; 255
 186:	29 f0       	breq	.+10     	; 0x192 <__divsf3+0x24>
 188:	0c 94 66 01 	jmp	0x2cc	; 0x2cc <__fp_inf>
 18c:	51 11       	cpse	r21, r1
 18e:	0c 94 b1 01 	jmp	0x362	; 0x362 <__fp_szero>
 192:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__fp_nan>

00000196 <__divsf3x>:
 196:	0e 94 8e 01 	call	0x31c	; 0x31c <__fp_split3>
 19a:	68 f3       	brcs	.-38     	; 0x176 <__divsf3+0x8>

0000019c <__divsf3_pse>:
 19c:	99 23       	and	r25, r25
 19e:	b1 f3       	breq	.-20     	; 0x18c <__divsf3+0x1e>
 1a0:	55 23       	and	r21, r21
 1a2:	91 f3       	breq	.-28     	; 0x188 <__divsf3+0x1a>
 1a4:	95 1b       	sub	r25, r21
 1a6:	55 0b       	sbc	r21, r21
 1a8:	bb 27       	eor	r27, r27
 1aa:	aa 27       	eor	r26, r26
 1ac:	62 17       	cp	r22, r18
 1ae:	73 07       	cpc	r23, r19
 1b0:	84 07       	cpc	r24, r20
 1b2:	38 f0       	brcs	.+14     	; 0x1c2 <__divsf3_pse+0x26>
 1b4:	9f 5f       	subi	r25, 0xFF	; 255
 1b6:	5f 4f       	sbci	r21, 0xFF	; 255
 1b8:	22 0f       	add	r18, r18
 1ba:	33 1f       	adc	r19, r19
 1bc:	44 1f       	adc	r20, r20
 1be:	aa 1f       	adc	r26, r26
 1c0:	a9 f3       	breq	.-22     	; 0x1ac <__divsf3_pse+0x10>
 1c2:	35 d0       	rcall	.+106    	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
 1c4:	0e 2e       	mov	r0, r30
 1c6:	3a f0       	brmi	.+14     	; 0x1d6 <__divsf3_pse+0x3a>
 1c8:	e0 e8       	ldi	r30, 0x80	; 128
 1ca:	32 d0       	rcall	.+100    	; 0x230 <__EEPROM_REGION_LENGTH__+0x30>
 1cc:	91 50       	subi	r25, 0x01	; 1
 1ce:	50 40       	sbci	r21, 0x00	; 0
 1d0:	e6 95       	lsr	r30
 1d2:	00 1c       	adc	r0, r0
 1d4:	ca f7       	brpl	.-14     	; 0x1c8 <__divsf3_pse+0x2c>
 1d6:	2b d0       	rcall	.+86     	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
 1d8:	fe 2f       	mov	r31, r30
 1da:	29 d0       	rcall	.+82     	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
 1dc:	66 0f       	add	r22, r22
 1de:	77 1f       	adc	r23, r23
 1e0:	88 1f       	adc	r24, r24
 1e2:	bb 1f       	adc	r27, r27
 1e4:	26 17       	cp	r18, r22
 1e6:	37 07       	cpc	r19, r23
 1e8:	48 07       	cpc	r20, r24
 1ea:	ab 07       	cpc	r26, r27
 1ec:	b0 e8       	ldi	r27, 0x80	; 128
 1ee:	09 f0       	breq	.+2      	; 0x1f2 <__divsf3_pse+0x56>
 1f0:	bb 0b       	sbc	r27, r27
 1f2:	80 2d       	mov	r24, r0
 1f4:	bf 01       	movw	r22, r30
 1f6:	ff 27       	eor	r31, r31
 1f8:	93 58       	subi	r25, 0x83	; 131
 1fa:	5f 4f       	sbci	r21, 0xFF	; 255
 1fc:	3a f0       	brmi	.+14     	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>
 1fe:	9e 3f       	cpi	r25, 0xFE	; 254
 200:	51 05       	cpc	r21, r1
 202:	78 f0       	brcs	.+30     	; 0x222 <__EEPROM_REGION_LENGTH__+0x22>
 204:	0c 94 66 01 	jmp	0x2cc	; 0x2cc <__fp_inf>
 208:	0c 94 b1 01 	jmp	0x362	; 0x362 <__fp_szero>
 20c:	5f 3f       	cpi	r21, 0xFF	; 255
 20e:	e4 f3       	brlt	.-8      	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
 210:	98 3e       	cpi	r25, 0xE8	; 232
 212:	d4 f3       	brlt	.-12     	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
 214:	86 95       	lsr	r24
 216:	77 95       	ror	r23
 218:	67 95       	ror	r22
 21a:	b7 95       	ror	r27
 21c:	f7 95       	ror	r31
 21e:	9f 5f       	subi	r25, 0xFF	; 255
 220:	c9 f7       	brne	.-14     	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
 222:	88 0f       	add	r24, r24
 224:	91 1d       	adc	r25, r1
 226:	96 95       	lsr	r25
 228:	87 95       	ror	r24
 22a:	97 f9       	bld	r25, 7
 22c:	08 95       	ret
 22e:	e1 e0       	ldi	r30, 0x01	; 1
 230:	66 0f       	add	r22, r22
 232:	77 1f       	adc	r23, r23
 234:	88 1f       	adc	r24, r24
 236:	bb 1f       	adc	r27, r27
 238:	62 17       	cp	r22, r18
 23a:	73 07       	cpc	r23, r19
 23c:	84 07       	cpc	r24, r20
 23e:	ba 07       	cpc	r27, r26
 240:	20 f0       	brcs	.+8      	; 0x24a <__EEPROM_REGION_LENGTH__+0x4a>
 242:	62 1b       	sub	r22, r18
 244:	73 0b       	sbc	r23, r19
 246:	84 0b       	sbc	r24, r20
 248:	ba 0b       	sbc	r27, r26
 24a:	ee 1f       	adc	r30, r30
 24c:	88 f7       	brcc	.-30     	; 0x230 <__EEPROM_REGION_LENGTH__+0x30>
 24e:	e0 95       	com	r30
 250:	08 95       	ret

00000252 <__floatunsisf>:
 252:	e8 94       	clt
 254:	09 c0       	rjmp	.+18     	; 0x268 <__floatsisf+0x12>

00000256 <__floatsisf>:
 256:	97 fb       	bst	r25, 7
 258:	3e f4       	brtc	.+14     	; 0x268 <__floatsisf+0x12>
 25a:	90 95       	com	r25
 25c:	80 95       	com	r24
 25e:	70 95       	com	r23
 260:	61 95       	neg	r22
 262:	7f 4f       	sbci	r23, 0xFF	; 255
 264:	8f 4f       	sbci	r24, 0xFF	; 255
 266:	9f 4f       	sbci	r25, 0xFF	; 255
 268:	99 23       	and	r25, r25
 26a:	a9 f0       	breq	.+42     	; 0x296 <__floatsisf+0x40>
 26c:	f9 2f       	mov	r31, r25
 26e:	96 e9       	ldi	r25, 0x96	; 150
 270:	bb 27       	eor	r27, r27
 272:	93 95       	inc	r25
 274:	f6 95       	lsr	r31
 276:	87 95       	ror	r24
 278:	77 95       	ror	r23
 27a:	67 95       	ror	r22
 27c:	b7 95       	ror	r27
 27e:	f1 11       	cpse	r31, r1
 280:	f8 cf       	rjmp	.-16     	; 0x272 <__floatsisf+0x1c>
 282:	fa f4       	brpl	.+62     	; 0x2c2 <__floatsisf+0x6c>
 284:	bb 0f       	add	r27, r27
 286:	11 f4       	brne	.+4      	; 0x28c <__floatsisf+0x36>
 288:	60 ff       	sbrs	r22, 0
 28a:	1b c0       	rjmp	.+54     	; 0x2c2 <__floatsisf+0x6c>
 28c:	6f 5f       	subi	r22, 0xFF	; 255
 28e:	7f 4f       	sbci	r23, 0xFF	; 255
 290:	8f 4f       	sbci	r24, 0xFF	; 255
 292:	9f 4f       	sbci	r25, 0xFF	; 255
 294:	16 c0       	rjmp	.+44     	; 0x2c2 <__floatsisf+0x6c>
 296:	88 23       	and	r24, r24
 298:	11 f0       	breq	.+4      	; 0x29e <__floatsisf+0x48>
 29a:	96 e9       	ldi	r25, 0x96	; 150
 29c:	11 c0       	rjmp	.+34     	; 0x2c0 <__floatsisf+0x6a>
 29e:	77 23       	and	r23, r23
 2a0:	21 f0       	breq	.+8      	; 0x2aa <__floatsisf+0x54>
 2a2:	9e e8       	ldi	r25, 0x8E	; 142
 2a4:	87 2f       	mov	r24, r23
 2a6:	76 2f       	mov	r23, r22
 2a8:	05 c0       	rjmp	.+10     	; 0x2b4 <__floatsisf+0x5e>
 2aa:	66 23       	and	r22, r22
 2ac:	71 f0       	breq	.+28     	; 0x2ca <__floatsisf+0x74>
 2ae:	96 e8       	ldi	r25, 0x86	; 134
 2b0:	86 2f       	mov	r24, r22
 2b2:	70 e0       	ldi	r23, 0x00	; 0
 2b4:	60 e0       	ldi	r22, 0x00	; 0
 2b6:	2a f0       	brmi	.+10     	; 0x2c2 <__floatsisf+0x6c>
 2b8:	9a 95       	dec	r25
 2ba:	66 0f       	add	r22, r22
 2bc:	77 1f       	adc	r23, r23
 2be:	88 1f       	adc	r24, r24
 2c0:	da f7       	brpl	.-10     	; 0x2b8 <__floatsisf+0x62>
 2c2:	88 0f       	add	r24, r24
 2c4:	96 95       	lsr	r25
 2c6:	87 95       	ror	r24
 2c8:	97 f9       	bld	r25, 7
 2ca:	08 95       	ret

000002cc <__fp_inf>:
 2cc:	97 f9       	bld	r25, 7
 2ce:	9f 67       	ori	r25, 0x7F	; 127
 2d0:	80 e8       	ldi	r24, 0x80	; 128
 2d2:	70 e0       	ldi	r23, 0x00	; 0
 2d4:	60 e0       	ldi	r22, 0x00	; 0
 2d6:	08 95       	ret

000002d8 <__fp_nan>:
 2d8:	9f ef       	ldi	r25, 0xFF	; 255
 2da:	80 ec       	ldi	r24, 0xC0	; 192
 2dc:	08 95       	ret

000002de <__fp_pscA>:
 2de:	00 24       	eor	r0, r0
 2e0:	0a 94       	dec	r0
 2e2:	16 16       	cp	r1, r22
 2e4:	17 06       	cpc	r1, r23
 2e6:	18 06       	cpc	r1, r24
 2e8:	09 06       	cpc	r0, r25
 2ea:	08 95       	ret

000002ec <__fp_pscB>:
 2ec:	00 24       	eor	r0, r0
 2ee:	0a 94       	dec	r0
 2f0:	12 16       	cp	r1, r18
 2f2:	13 06       	cpc	r1, r19
 2f4:	14 06       	cpc	r1, r20
 2f6:	05 06       	cpc	r0, r21
 2f8:	08 95       	ret

000002fa <__fp_round>:
 2fa:	09 2e       	mov	r0, r25
 2fc:	03 94       	inc	r0
 2fe:	00 0c       	add	r0, r0
 300:	11 f4       	brne	.+4      	; 0x306 <__fp_round+0xc>
 302:	88 23       	and	r24, r24
 304:	52 f0       	brmi	.+20     	; 0x31a <__fp_round+0x20>
 306:	bb 0f       	add	r27, r27
 308:	40 f4       	brcc	.+16     	; 0x31a <__fp_round+0x20>
 30a:	bf 2b       	or	r27, r31
 30c:	11 f4       	brne	.+4      	; 0x312 <__fp_round+0x18>
 30e:	60 ff       	sbrs	r22, 0
 310:	04 c0       	rjmp	.+8      	; 0x31a <__fp_round+0x20>
 312:	6f 5f       	subi	r22, 0xFF	; 255
 314:	7f 4f       	sbci	r23, 0xFF	; 255
 316:	8f 4f       	sbci	r24, 0xFF	; 255
 318:	9f 4f       	sbci	r25, 0xFF	; 255
 31a:	08 95       	ret

0000031c <__fp_split3>:
 31c:	57 fd       	sbrc	r21, 7
 31e:	90 58       	subi	r25, 0x80	; 128
 320:	44 0f       	add	r20, r20
 322:	55 1f       	adc	r21, r21
 324:	59 f0       	breq	.+22     	; 0x33c <__fp_splitA+0x10>
 326:	5f 3f       	cpi	r21, 0xFF	; 255
 328:	71 f0       	breq	.+28     	; 0x346 <__fp_splitA+0x1a>
 32a:	47 95       	ror	r20

0000032c <__fp_splitA>:
 32c:	88 0f       	add	r24, r24
 32e:	97 fb       	bst	r25, 7
 330:	99 1f       	adc	r25, r25
 332:	61 f0       	breq	.+24     	; 0x34c <__fp_splitA+0x20>
 334:	9f 3f       	cpi	r25, 0xFF	; 255
 336:	79 f0       	breq	.+30     	; 0x356 <__fp_splitA+0x2a>
 338:	87 95       	ror	r24
 33a:	08 95       	ret
 33c:	12 16       	cp	r1, r18
 33e:	13 06       	cpc	r1, r19
 340:	14 06       	cpc	r1, r20
 342:	55 1f       	adc	r21, r21
 344:	f2 cf       	rjmp	.-28     	; 0x32a <__fp_split3+0xe>
 346:	46 95       	lsr	r20
 348:	f1 df       	rcall	.-30     	; 0x32c <__fp_splitA>
 34a:	08 c0       	rjmp	.+16     	; 0x35c <__fp_splitA+0x30>
 34c:	16 16       	cp	r1, r22
 34e:	17 06       	cpc	r1, r23
 350:	18 06       	cpc	r1, r24
 352:	99 1f       	adc	r25, r25
 354:	f1 cf       	rjmp	.-30     	; 0x338 <__fp_splitA+0xc>
 356:	86 95       	lsr	r24
 358:	71 05       	cpc	r23, r1
 35a:	61 05       	cpc	r22, r1
 35c:	08 94       	sec
 35e:	08 95       	ret

00000360 <__fp_zero>:
 360:	e8 94       	clt

00000362 <__fp_szero>:
 362:	bb 27       	eor	r27, r27
 364:	66 27       	eor	r22, r22
 366:	77 27       	eor	r23, r23
 368:	cb 01       	movw	r24, r22
 36a:	97 f9       	bld	r25, 7
 36c:	08 95       	ret

0000036e <__mulsf3>:
 36e:	0e 94 ca 01 	call	0x394	; 0x394 <__mulsf3x>
 372:	0c 94 7d 01 	jmp	0x2fa	; 0x2fa <__fp_round>
 376:	0e 94 6f 01 	call	0x2de	; 0x2de <__fp_pscA>
 37a:	38 f0       	brcs	.+14     	; 0x38a <__mulsf3+0x1c>
 37c:	0e 94 76 01 	call	0x2ec	; 0x2ec <__fp_pscB>
 380:	20 f0       	brcs	.+8      	; 0x38a <__mulsf3+0x1c>
 382:	95 23       	and	r25, r21
 384:	11 f0       	breq	.+4      	; 0x38a <__mulsf3+0x1c>
 386:	0c 94 66 01 	jmp	0x2cc	; 0x2cc <__fp_inf>
 38a:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__fp_nan>
 38e:	11 24       	eor	r1, r1
 390:	0c 94 b1 01 	jmp	0x362	; 0x362 <__fp_szero>

00000394 <__mulsf3x>:
 394:	0e 94 8e 01 	call	0x31c	; 0x31c <__fp_split3>
 398:	70 f3       	brcs	.-36     	; 0x376 <__mulsf3+0x8>

0000039a <__mulsf3_pse>:
 39a:	95 9f       	mul	r25, r21
 39c:	c1 f3       	breq	.-16     	; 0x38e <__mulsf3+0x20>
 39e:	95 0f       	add	r25, r21
 3a0:	50 e0       	ldi	r21, 0x00	; 0
 3a2:	55 1f       	adc	r21, r21
 3a4:	62 9f       	mul	r22, r18
 3a6:	f0 01       	movw	r30, r0
 3a8:	72 9f       	mul	r23, r18
 3aa:	bb 27       	eor	r27, r27
 3ac:	f0 0d       	add	r31, r0
 3ae:	b1 1d       	adc	r27, r1
 3b0:	63 9f       	mul	r22, r19
 3b2:	aa 27       	eor	r26, r26
 3b4:	f0 0d       	add	r31, r0
 3b6:	b1 1d       	adc	r27, r1
 3b8:	aa 1f       	adc	r26, r26
 3ba:	64 9f       	mul	r22, r20
 3bc:	66 27       	eor	r22, r22
 3be:	b0 0d       	add	r27, r0
 3c0:	a1 1d       	adc	r26, r1
 3c2:	66 1f       	adc	r22, r22
 3c4:	82 9f       	mul	r24, r18
 3c6:	22 27       	eor	r18, r18
 3c8:	b0 0d       	add	r27, r0
 3ca:	a1 1d       	adc	r26, r1
 3cc:	62 1f       	adc	r22, r18
 3ce:	73 9f       	mul	r23, r19
 3d0:	b0 0d       	add	r27, r0
 3d2:	a1 1d       	adc	r26, r1
 3d4:	62 1f       	adc	r22, r18
 3d6:	83 9f       	mul	r24, r19
 3d8:	a0 0d       	add	r26, r0
 3da:	61 1d       	adc	r22, r1
 3dc:	22 1f       	adc	r18, r18
 3de:	74 9f       	mul	r23, r20
 3e0:	33 27       	eor	r19, r19
 3e2:	a0 0d       	add	r26, r0
 3e4:	61 1d       	adc	r22, r1
 3e6:	23 1f       	adc	r18, r19
 3e8:	84 9f       	mul	r24, r20
 3ea:	60 0d       	add	r22, r0
 3ec:	21 1d       	adc	r18, r1
 3ee:	82 2f       	mov	r24, r18
 3f0:	76 2f       	mov	r23, r22
 3f2:	6a 2f       	mov	r22, r26
 3f4:	11 24       	eor	r1, r1
 3f6:	9f 57       	subi	r25, 0x7F	; 127
 3f8:	50 40       	sbci	r21, 0x00	; 0
 3fa:	9a f0       	brmi	.+38     	; 0x422 <__DATA_REGION_LENGTH__+0x22>
 3fc:	f1 f0       	breq	.+60     	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 3fe:	88 23       	and	r24, r24
 400:	4a f0       	brmi	.+18     	; 0x414 <__DATA_REGION_LENGTH__+0x14>
 402:	ee 0f       	add	r30, r30
 404:	ff 1f       	adc	r31, r31
 406:	bb 1f       	adc	r27, r27
 408:	66 1f       	adc	r22, r22
 40a:	77 1f       	adc	r23, r23
 40c:	88 1f       	adc	r24, r24
 40e:	91 50       	subi	r25, 0x01	; 1
 410:	50 40       	sbci	r21, 0x00	; 0
 412:	a9 f7       	brne	.-22     	; 0x3fe <__mulsf3_pse+0x64>
 414:	9e 3f       	cpi	r25, 0xFE	; 254
 416:	51 05       	cpc	r21, r1
 418:	80 f0       	brcs	.+32     	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 41a:	0c 94 66 01 	jmp	0x2cc	; 0x2cc <__fp_inf>
 41e:	0c 94 b1 01 	jmp	0x362	; 0x362 <__fp_szero>
 422:	5f 3f       	cpi	r21, 0xFF	; 255
 424:	e4 f3       	brlt	.-8      	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 426:	98 3e       	cpi	r25, 0xE8	; 232
 428:	d4 f3       	brlt	.-12     	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 42a:	86 95       	lsr	r24
 42c:	77 95       	ror	r23
 42e:	67 95       	ror	r22
 430:	b7 95       	ror	r27
 432:	f7 95       	ror	r31
 434:	e7 95       	ror	r30
 436:	9f 5f       	subi	r25, 0xFF	; 255
 438:	c1 f7       	brne	.-16     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 43a:	fe 2b       	or	r31, r30
 43c:	88 0f       	add	r24, r24
 43e:	91 1d       	adc	r25, r1
 440:	96 95       	lsr	r25
 442:	87 95       	ror	r24
 444:	97 f9       	bld	r25, 7
 446:	08 95       	ret

00000448 <_exit>:
 448:	f8 94       	cli

0000044a <__stop_program>:
 44a:	ff cf       	rjmp	.-2      	; 0x44a <__stop_program>
