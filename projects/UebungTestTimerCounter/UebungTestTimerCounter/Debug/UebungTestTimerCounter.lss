
UebungTestTimerCounter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001e8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000025c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  0000025c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000028c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000002c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000881  00000000  00000000  00000300  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000061a  00000000  00000000  00000b81  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000357  00000000  00000000  0000119b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000070  00000000  00000000  000014f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003bb  00000000  00000000  00001564  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002de  00000000  00000000  0000191f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001bfd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__vector_9>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <main>
  74:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <__vector_9>:

volatile uint8_t TCNT0Var = 0;
volatile uint8_t i = 0;

ISR(TIMER0_OVF_vect)
{
  7c:	1f 92       	push	r1
  7e:	0f 92       	push	r0
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	0f 92       	push	r0
  84:	11 24       	eor	r1, r1
  86:	2f 93       	push	r18
  88:	8f 93       	push	r24
  8a:	9f 93       	push	r25
	TCNT0 = TCNT0Var;
  8c:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <TCNT0Var>
  90:	82 bf       	out	0x32, r24	; 50
	
	for(TCNT0Var = 0; TCNT0Var <= 200;)
  92:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <TCNT0Var>
  96:	0e c0       	rjmp	.+28     	; 0xb4 <__vector_9+0x38>
	{
		TCNT0Var++;
  98:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <TCNT0Var>
  9c:	8f 5f       	subi	r24, 0xFF	; 255
  9e:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <TCNT0Var>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a2:	2f e7       	ldi	r18, 0x7F	; 127
  a4:	89 ea       	ldi	r24, 0xA9	; 169
  a6:	93 e0       	ldi	r25, 0x03	; 3
  a8:	21 50       	subi	r18, 0x01	; 1
  aa:	80 40       	sbci	r24, 0x00	; 0
  ac:	90 40       	sbci	r25, 0x00	; 0
  ae:	e1 f7       	brne	.-8      	; 0xa8 <__vector_9+0x2c>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <__vector_9+0x36>
  b2:	00 00       	nop

ISR(TIMER0_OVF_vect)
{
	TCNT0 = TCNT0Var;
	
	for(TCNT0Var = 0; TCNT0Var <= 200;)
  b4:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <TCNT0Var>
  b8:	89 3c       	cpi	r24, 0xC9	; 201
  ba:	70 f3       	brcs	.-36     	; 0x98 <__vector_9+0x1c>
	{
		TCNT0Var++;
		_delay_ms(100);
	}
	
	for(i = 0; i <= 7;)
  bc:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
  c0:	67 c0       	rjmp	.+206    	; 0x190 <__vector_9+0x114>
	{
		PORTC ^= (1 << PC0);
  c2:	95 b3       	in	r25, 0x15	; 21
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	89 27       	eor	r24, r25
  c8:	85 bb       	out	0x15, r24	; 21
  ca:	2f e7       	ldi	r18, 0x7F	; 127
  cc:	8f e4       	ldi	r24, 0x4F	; 79
  ce:	92 e1       	ldi	r25, 0x12	; 18
  d0:	21 50       	subi	r18, 0x01	; 1
  d2:	80 40       	sbci	r24, 0x00	; 0
  d4:	90 40       	sbci	r25, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <__vector_9+0x54>
  d8:	00 c0       	rjmp	.+0      	; 0xda <__vector_9+0x5e>
  da:	00 00       	nop
		_delay_ms(500);
		PORTC ^= (1 << PC1);
  dc:	95 b3       	in	r25, 0x15	; 21
  de:	82 e0       	ldi	r24, 0x02	; 2
  e0:	89 27       	eor	r24, r25
  e2:	85 bb       	out	0x15, r24	; 21
  e4:	2f e7       	ldi	r18, 0x7F	; 127
  e6:	8f e4       	ldi	r24, 0x4F	; 79
  e8:	92 e1       	ldi	r25, 0x12	; 18
  ea:	21 50       	subi	r18, 0x01	; 1
  ec:	80 40       	sbci	r24, 0x00	; 0
  ee:	90 40       	sbci	r25, 0x00	; 0
  f0:	e1 f7       	brne	.-8      	; 0xea <__vector_9+0x6e>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <__vector_9+0x78>
  f4:	00 00       	nop
		_delay_ms(500);
		PORTC ^= (1 << PC2);
  f6:	95 b3       	in	r25, 0x15	; 21
  f8:	84 e0       	ldi	r24, 0x04	; 4
  fa:	89 27       	eor	r24, r25
  fc:	85 bb       	out	0x15, r24	; 21
  fe:	2f e7       	ldi	r18, 0x7F	; 127
 100:	8f e4       	ldi	r24, 0x4F	; 79
 102:	92 e1       	ldi	r25, 0x12	; 18
 104:	21 50       	subi	r18, 0x01	; 1
 106:	80 40       	sbci	r24, 0x00	; 0
 108:	90 40       	sbci	r25, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <__vector_9+0x88>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <__vector_9+0x92>
 10e:	00 00       	nop
		_delay_ms(500);
		PORTC ^= (1 << PC3);
 110:	95 b3       	in	r25, 0x15	; 21
 112:	88 e0       	ldi	r24, 0x08	; 8
 114:	89 27       	eor	r24, r25
 116:	85 bb       	out	0x15, r24	; 21
 118:	2f e7       	ldi	r18, 0x7F	; 127
 11a:	8f e4       	ldi	r24, 0x4F	; 79
 11c:	92 e1       	ldi	r25, 0x12	; 18
 11e:	21 50       	subi	r18, 0x01	; 1
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	90 40       	sbci	r25, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <__vector_9+0xa2>
 126:	00 c0       	rjmp	.+0      	; 0x128 <__vector_9+0xac>
 128:	00 00       	nop
		_delay_ms(500);
		PORTC ^= (1 << PC4);
 12a:	95 b3       	in	r25, 0x15	; 21
 12c:	80 e1       	ldi	r24, 0x10	; 16
 12e:	89 27       	eor	r24, r25
 130:	85 bb       	out	0x15, r24	; 21
 132:	2f e7       	ldi	r18, 0x7F	; 127
 134:	8f e4       	ldi	r24, 0x4F	; 79
 136:	92 e1       	ldi	r25, 0x12	; 18
 138:	21 50       	subi	r18, 0x01	; 1
 13a:	80 40       	sbci	r24, 0x00	; 0
 13c:	90 40       	sbci	r25, 0x00	; 0
 13e:	e1 f7       	brne	.-8      	; 0x138 <__vector_9+0xbc>
 140:	00 c0       	rjmp	.+0      	; 0x142 <__vector_9+0xc6>
 142:	00 00       	nop
		_delay_ms(500);
		PORTC ^= (1 << PC5);
 144:	95 b3       	in	r25, 0x15	; 21
 146:	80 e2       	ldi	r24, 0x20	; 32
 148:	89 27       	eor	r24, r25
 14a:	85 bb       	out	0x15, r24	; 21
 14c:	2f e7       	ldi	r18, 0x7F	; 127
 14e:	8f e4       	ldi	r24, 0x4F	; 79
 150:	92 e1       	ldi	r25, 0x12	; 18
 152:	21 50       	subi	r18, 0x01	; 1
 154:	80 40       	sbci	r24, 0x00	; 0
 156:	90 40       	sbci	r25, 0x00	; 0
 158:	e1 f7       	brne	.-8      	; 0x152 <__vector_9+0xd6>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <__vector_9+0xe0>
 15c:	00 00       	nop
		_delay_ms(500);
		PORTC ^= (1 << PC6);
 15e:	95 b3       	in	r25, 0x15	; 21
 160:	80 e4       	ldi	r24, 0x40	; 64
 162:	89 27       	eor	r24, r25
 164:	85 bb       	out	0x15, r24	; 21
 166:	2f e7       	ldi	r18, 0x7F	; 127
 168:	8f e4       	ldi	r24, 0x4F	; 79
 16a:	92 e1       	ldi	r25, 0x12	; 18
 16c:	21 50       	subi	r18, 0x01	; 1
 16e:	80 40       	sbci	r24, 0x00	; 0
 170:	90 40       	sbci	r25, 0x00	; 0
 172:	e1 f7       	brne	.-8      	; 0x16c <__vector_9+0xf0>
 174:	00 c0       	rjmp	.+0      	; 0x176 <__vector_9+0xfa>
 176:	00 00       	nop
		_delay_ms(500);
		PORTC ^= (1 << PC7);
 178:	85 b3       	in	r24, 0x15	; 21
 17a:	80 58       	subi	r24, 0x80	; 128
 17c:	85 bb       	out	0x15, r24	; 21
 17e:	2f e7       	ldi	r18, 0x7F	; 127
 180:	8f e4       	ldi	r24, 0x4F	; 79
 182:	92 e1       	ldi	r25, 0x12	; 18
 184:	21 50       	subi	r18, 0x01	; 1
 186:	80 40       	sbci	r24, 0x00	; 0
 188:	90 40       	sbci	r25, 0x00	; 0
 18a:	e1 f7       	brne	.-8      	; 0x184 <__vector_9+0x108>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <__vector_9+0x112>
 18e:	00 00       	nop
	{
		TCNT0Var++;
		_delay_ms(100);
	}
	
	for(i = 0; i <= 7;)
 190:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 194:	88 30       	cpi	r24, 0x08	; 8
 196:	08 f4       	brcc	.+2      	; 0x19a <__vector_9+0x11e>
 198:	94 cf       	rjmp	.-216    	; 0xc2 <__vector_9+0x46>
		_delay_ms(500);
		PORTC ^= (1 << PC7);
		_delay_ms(500);
		
	}
}
 19a:	9f 91       	pop	r25
 19c:	8f 91       	pop	r24
 19e:	2f 91       	pop	r18
 1a0:	0f 90       	pop	r0
 1a2:	0f be       	out	0x3f, r0	; 63
 1a4:	0f 90       	pop	r0
 1a6:	1f 90       	pop	r1
 1a8:	18 95       	reti

000001aa <init_Ports>:

void init_Ports()
{
	DDRC = 0xFF;
 1aa:	8f ef       	ldi	r24, 0xFF	; 255
 1ac:	84 bb       	out	0x14, r24	; 20
	
	DDRB |= (1 << PB3);
 1ae:	87 b3       	in	r24, 0x17	; 23
 1b0:	88 60       	ori	r24, 0x08	; 8
 1b2:	87 bb       	out	0x17, r24	; 23
 1b4:	08 95       	ret

000001b6 <init_timer0>:
}

void init_timer0()
{
	TCCR0 &= ~(WGM00);
 1b6:	83 b7       	in	r24, 0x33	; 51
 1b8:	89 7f       	andi	r24, 0xF9	; 249
 1ba:	83 bf       	out	0x33, r24	; 51
	TCCR0 &= ~(WGM01);
 1bc:	83 b7       	in	r24, 0x33	; 51
 1be:	8c 7f       	andi	r24, 0xFC	; 252
 1c0:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= (1 << COM00)|(1 << CS01)|(1 << CS00);
 1c2:	83 b7       	in	r24, 0x33	; 51
 1c4:	83 61       	ori	r24, 0x13	; 19
 1c6:	83 bf       	out	0x33, r24	; 51
	
	TCNT0 = TCNT0Var;
 1c8:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <TCNT0Var>
 1cc:	82 bf       	out	0x32, r24	; 50
	TIMSK |= (1 << TOIE0);
 1ce:	89 b7       	in	r24, 0x39	; 57
 1d0:	81 60       	ori	r24, 0x01	; 1
 1d2:	89 bf       	out	0x39, r24	; 57
 1d4:	08 95       	ret

000001d6 <main>:
}

int main(void)
{
	cli();
 1d6:	f8 94       	cli
	init_Ports();
 1d8:	0e 94 d5 00 	call	0x1aa	; 0x1aa <init_Ports>
	init_timer0();
 1dc:	0e 94 db 00 	call	0x1b6	; 0x1b6 <init_timer0>
	sei();
 1e0:	78 94       	sei
 1e2:	ff cf       	rjmp	.-2      	; 0x1e2 <main+0xc>

000001e4 <_exit>:
 1e4:	f8 94       	cli

000001e6 <__stop_program>:
 1e6:	ff cf       	rjmp	.-2      	; 0x1e6 <__stop_program>
