
TestUebung3FastPWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000234  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  000002a8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000314  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009e9  00000000  00000000  00000344  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005e0  00000000  00000000  00000d2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003da  00000000  00000000  0000130d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  000016e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003a9  00000000  00000000  0000172c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000480  00000000  00000000  00001ad5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001f55  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 57 00 	call	0xae	; 0xae <main>
  74:	0c 94 18 01 	jmp	0x230	; 0x230 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <init_Ports>:

volatile uint8_t OCR0Var = 0;

void init_Ports()
{
	DDRC = 0xFF;
  7c:	8f ef       	ldi	r24, 0xFF	; 255
  7e:	84 bb       	out	0x14, r24	; 20
	PORTC ^= (1 << PC7);	// indicator led init ports
  80:	85 b3       	in	r24, 0x15	; 21
  82:	80 58       	subi	r24, 0x80	; 128
  84:	85 bb       	out	0x15, r24	; 21
	
	DDRB |= (1 << PB3);		// output for signal
  86:	87 b3       	in	r24, 0x17	; 23
  88:	88 60       	ori	r24, 0x08	; 8
  8a:	87 bb       	out	0x17, r24	; 23
	PORTB &= ~(1 << PB3);
  8c:	88 b3       	in	r24, 0x18	; 24
  8e:	87 7f       	andi	r24, 0xF7	; 247
  90:	88 bb       	out	0x18, r24	; 24
	
	DDRA &= ~((1 << PA0)|(1 << PA1));
  92:	8a b3       	in	r24, 0x1a	; 26
  94:	8c 7f       	andi	r24, 0xFC	; 252
  96:	8a bb       	out	0x1a, r24	; 26
	PORTA |= ((1 << PA0)|(1 << PA1));
  98:	8b b3       	in	r24, 0x1b	; 27
  9a:	83 60       	ori	r24, 0x03	; 3
  9c:	8b bb       	out	0x1b, r24	; 27
  9e:	08 95       	ret

000000a0 <init_fast_PMW>:
}

void init_fast_PMW()
{
	TCCR0 |= (1 << WGM00)|(1 << COM01)|(1 << WGM01)|(1 << CS01)|(1 << CS00);
  a0:	83 b7       	in	r24, 0x33	; 51
  a2:	8b 66       	ori	r24, 0x6B	; 107
  a4:	83 bf       	out	0x33, r24	; 51
	
	OCR0 = OCR0Var;
  a6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  aa:	8c bf       	out	0x3c, r24	; 60
  ac:	08 95       	ret

000000ae <main>:
}

int main(void)
{
	cli();
  ae:	f8 94       	cli
	init_Ports();
  b0:	0e 94 3e 00 	call	0x7c	; 0x7c <init_Ports>
	
	while(1)
	{
		if((PINA & (1 << PA0)) == 0)
  b4:	c8 99       	sbic	0x19, 0	; 25
  b6:	5a c0       	rjmp	.+180    	; 0x16c <main+0xbe>
		{
			for(OCR0Var = 0; OCR0Var <= 150; OCR0Var++)
  b8:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
  bc:	51 c0       	rjmp	.+162    	; 0x160 <main+0xb2>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	8f e2       	ldi	r24, 0x2F	; 47
  c0:	95 e7       	ldi	r25, 0x75	; 117
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <main+0x14>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <main+0x1a>
  c8:	00 00       	nop
			{
				_delay_ms(10);
				PORTC ^= (1 << PC6);
  ca:	95 b3       	in	r25, 0x15	; 21
  cc:	80 e4       	ldi	r24, 0x40	; 64
  ce:	89 27       	eor	r24, r25
  d0:	85 bb       	out	0x15, r24	; 21
  d2:	8f e2       	ldi	r24, 0x2F	; 47
  d4:	95 e7       	ldi	r25, 0x75	; 117
  d6:	01 97       	sbiw	r24, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <main+0x28>
  da:	00 c0       	rjmp	.+0      	; 0xdc <main+0x2e>
  dc:	00 00       	nop
				_delay_ms(10);
				PORTC ^= (1 << PC5);
  de:	95 b3       	in	r25, 0x15	; 21
  e0:	80 e2       	ldi	r24, 0x20	; 32
  e2:	89 27       	eor	r24, r25
  e4:	85 bb       	out	0x15, r24	; 21
  e6:	8f e2       	ldi	r24, 0x2F	; 47
  e8:	95 e7       	ldi	r25, 0x75	; 117
  ea:	01 97       	sbiw	r24, 0x01	; 1
  ec:	f1 f7       	brne	.-4      	; 0xea <main+0x3c>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <main+0x42>
  f0:	00 00       	nop
				_delay_ms(10);
				PORTC ^= (1 << PC4);
  f2:	95 b3       	in	r25, 0x15	; 21
  f4:	80 e1       	ldi	r24, 0x10	; 16
  f6:	89 27       	eor	r24, r25
  f8:	85 bb       	out	0x15, r24	; 21
  fa:	8f e2       	ldi	r24, 0x2F	; 47
  fc:	95 e7       	ldi	r25, 0x75	; 117
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <main+0x50>
 102:	00 c0       	rjmp	.+0      	; 0x104 <main+0x56>
 104:	00 00       	nop
				_delay_ms(10);
				PORTC ^= (1 << PC3);
 106:	95 b3       	in	r25, 0x15	; 21
 108:	88 e0       	ldi	r24, 0x08	; 8
 10a:	89 27       	eor	r24, r25
 10c:	85 bb       	out	0x15, r24	; 21
 10e:	8f e2       	ldi	r24, 0x2F	; 47
 110:	95 e7       	ldi	r25, 0x75	; 117
 112:	01 97       	sbiw	r24, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <main+0x64>
 116:	00 c0       	rjmp	.+0      	; 0x118 <main+0x6a>
 118:	00 00       	nop
				_delay_ms(10);
				PORTC ^= (1 << PC2);
 11a:	95 b3       	in	r25, 0x15	; 21
 11c:	84 e0       	ldi	r24, 0x04	; 4
 11e:	89 27       	eor	r24, r25
 120:	85 bb       	out	0x15, r24	; 21
 122:	8f e2       	ldi	r24, 0x2F	; 47
 124:	95 e7       	ldi	r25, 0x75	; 117
 126:	01 97       	sbiw	r24, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <main+0x78>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <main+0x7e>
 12c:	00 00       	nop
				_delay_ms(10);
				PORTC ^= (1 << PC1);
 12e:	95 b3       	in	r25, 0x15	; 21
 130:	82 e0       	ldi	r24, 0x02	; 2
 132:	89 27       	eor	r24, r25
 134:	85 bb       	out	0x15, r24	; 21
 136:	8f e2       	ldi	r24, 0x2F	; 47
 138:	95 e7       	ldi	r25, 0x75	; 117
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <main+0x8c>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <main+0x92>
 140:	00 00       	nop
				_delay_ms(10);
				PORTC ^= (1 << PC0);
 142:	95 b3       	in	r25, 0x15	; 21
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	89 27       	eor	r24, r25
 148:	85 bb       	out	0x15, r24	; 21
 14a:	8f e2       	ldi	r24, 0x2F	; 47
 14c:	95 e7       	ldi	r25, 0x75	; 117
 14e:	01 97       	sbiw	r24, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <main+0xa0>
 152:	00 c0       	rjmp	.+0      	; 0x154 <main+0xa6>
 154:	00 00       	nop
	
	while(1)
	{
		if((PINA & (1 << PA0)) == 0)
		{
			for(OCR0Var = 0; OCR0Var <= 150; OCR0Var++)
 156:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 15a:	8f 5f       	subi	r24, 0xFF	; 255
 15c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 160:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 164:	87 39       	cpi	r24, 0x97	; 151
 166:	08 f4       	brcc	.+2      	; 0x16a <main+0xbc>
 168:	aa cf       	rjmp	.-172    	; 0xbe <main+0x10>
 16a:	5e c0       	rjmp	.+188    	; 0x228 <__EEPROM_REGION_LENGTH__+0x28>
				_delay_ms(10);
				PORTC ^= (1 << PC0);
				_delay_ms(10);
			}
		}
		else if((PINA & (1 << PA1)) == 0)
 16c:	c9 99       	sbic	0x19, 1	; 25
 16e:	5c c0       	rjmp	.+184    	; 0x228 <__EEPROM_REGION_LENGTH__+0x28>
		{
			for(OCR0Var = 0; OCR0Var <= 150; OCR0Var--)
 170:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 174:	51 c0       	rjmp	.+162    	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
 176:	8f e2       	ldi	r24, 0x2F	; 47
 178:	95 e7       	ldi	r25, 0x75	; 117
 17a:	01 97       	sbiw	r24, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <main+0xcc>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <main+0xd2>
 180:	00 00       	nop
			{
				_delay_ms(10);
				PORTC ^= (1 << PC0);
 182:	95 b3       	in	r25, 0x15	; 21
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	89 27       	eor	r24, r25
 188:	85 bb       	out	0x15, r24	; 21
 18a:	8f e2       	ldi	r24, 0x2F	; 47
 18c:	95 e7       	ldi	r25, 0x75	; 117
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <main+0xe0>
 192:	00 c0       	rjmp	.+0      	; 0x194 <main+0xe6>
 194:	00 00       	nop
				_delay_ms(10);
				PORTC ^= (1 << PC1);
 196:	95 b3       	in	r25, 0x15	; 21
 198:	82 e0       	ldi	r24, 0x02	; 2
 19a:	89 27       	eor	r24, r25
 19c:	85 bb       	out	0x15, r24	; 21
 19e:	8f e2       	ldi	r24, 0x2F	; 47
 1a0:	95 e7       	ldi	r25, 0x75	; 117
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <main+0xf4>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <main+0xfa>
 1a8:	00 00       	nop
				_delay_ms(10);
				PORTC ^= (1 << PC2);
 1aa:	95 b3       	in	r25, 0x15	; 21
 1ac:	84 e0       	ldi	r24, 0x04	; 4
 1ae:	89 27       	eor	r24, r25
 1b0:	85 bb       	out	0x15, r24	; 21
 1b2:	8f e2       	ldi	r24, 0x2F	; 47
 1b4:	95 e7       	ldi	r25, 0x75	; 117
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <main+0x108>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <main+0x10e>
 1bc:	00 00       	nop
				_delay_ms(10);
				PORTC ^= (1 << PC3);
 1be:	95 b3       	in	r25, 0x15	; 21
 1c0:	88 e0       	ldi	r24, 0x08	; 8
 1c2:	89 27       	eor	r24, r25
 1c4:	85 bb       	out	0x15, r24	; 21
 1c6:	8f e2       	ldi	r24, 0x2F	; 47
 1c8:	95 e7       	ldi	r25, 0x75	; 117
 1ca:	01 97       	sbiw	r24, 0x01	; 1
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <main+0x11c>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <main+0x122>
 1d0:	00 00       	nop
				_delay_ms(10);
				PORTC ^= (1 << PC4);
 1d2:	95 b3       	in	r25, 0x15	; 21
 1d4:	80 e1       	ldi	r24, 0x10	; 16
 1d6:	89 27       	eor	r24, r25
 1d8:	85 bb       	out	0x15, r24	; 21
 1da:	8f e2       	ldi	r24, 0x2F	; 47
 1dc:	95 e7       	ldi	r25, 0x75	; 117
 1de:	01 97       	sbiw	r24, 0x01	; 1
 1e0:	f1 f7       	brne	.-4      	; 0x1de <main+0x130>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <main+0x136>
 1e4:	00 00       	nop
				_delay_ms(10);
				PORTC ^= (1 << PC5);
 1e6:	95 b3       	in	r25, 0x15	; 21
 1e8:	80 e2       	ldi	r24, 0x20	; 32
 1ea:	89 27       	eor	r24, r25
 1ec:	85 bb       	out	0x15, r24	; 21
 1ee:	8f e2       	ldi	r24, 0x2F	; 47
 1f0:	95 e7       	ldi	r25, 0x75	; 117
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <main+0x144>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <main+0x14a>
 1f8:	00 00       	nop
				_delay_ms(10);
				PORTC ^= (1 << PC6);
 1fa:	95 b3       	in	r25, 0x15	; 21
 1fc:	80 e4       	ldi	r24, 0x40	; 64
 1fe:	89 27       	eor	r24, r25
 200:	85 bb       	out	0x15, r24	; 21
 202:	8f e2       	ldi	r24, 0x2F	; 47
 204:	95 e7       	ldi	r25, 0x75	; 117
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>
 20c:	00 00       	nop
				_delay_ms(10);
			}
		}
		else if((PINA & (1 << PA1)) == 0)
		{
			for(OCR0Var = 0; OCR0Var <= 150; OCR0Var--)
 20e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 212:	81 50       	subi	r24, 0x01	; 1
 214:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 218:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 21c:	87 39       	cpi	r24, 0x97	; 151
 21e:	08 f4       	brcc	.+2      	; 0x222 <__EEPROM_REGION_LENGTH__+0x22>
 220:	aa cf       	rjmp	.-172    	; 0x176 <main+0xc8>
				_delay_ms(10);
				PORTC ^= (1 << PC6);
				_delay_ms(10);
			}
			
			OCR0Var = 50;
 222:	82 e3       	ldi	r24, 0x32	; 50
 224:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		}
		
		
		init_fast_PMW();
 228:	0e 94 50 00 	call	0xa0	; 0xa0 <init_fast_PMW>
		sei();
 22c:	78 94       	sei
	}
 22e:	42 cf       	rjmp	.-380    	; 0xb4 <main+0x6>

00000230 <_exit>:
 230:	f8 94       	cli

00000232 <__stop_program>:
 232:	ff cf       	rjmp	.-2      	; 0x232 <__stop_program>
