
TestUebung4TimerCounter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001b2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000226  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  00000226  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000226  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000258  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000294  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007ff  00000000  00000000  000002cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000061f  00000000  00000000  00000acb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000330  00000000  00000000  000010ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  0000141c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003bd  00000000  00000000  00001484  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000241  00000000  00000000  00001841  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001a82  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__vector_9>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <main>
  74:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <__vector_9>:
#include <util/delay.h>

volatile uint8_t TCNT0Var = 0;

ISR(TIMER0_OVF_vect)
{
  7c:	1f 92       	push	r1
  7e:	0f 92       	push	r0
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	0f 92       	push	r0
  84:	11 24       	eor	r1, r1
  86:	8f 93       	push	r24
  88:	9f 93       	push	r25
	TCNT0 = TCNT0Var;
  8a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  8e:	82 bf       	out	0x32, r24	; 50
	
	PORTC ^= (1 << PC0);
  90:	95 b3       	in	r25, 0x15	; 21
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	89 27       	eor	r24, r25
  96:	85 bb       	out	0x15, r24	; 21
}
  98:	9f 91       	pop	r25
  9a:	8f 91       	pop	r24
  9c:	0f 90       	pop	r0
  9e:	0f be       	out	0x3f, r0	; 63
  a0:	0f 90       	pop	r0
  a2:	1f 90       	pop	r1
  a4:	18 95       	reti

000000a6 <init_Ports>:

void init_Ports()
{
	DDRC = 0xFF;
  a6:	8f ef       	ldi	r24, 0xFF	; 255
  a8:	84 bb       	out	0x14, r24	; 20
	PORTC ^= (1 << PC1);
  aa:	95 b3       	in	r25, 0x15	; 21
  ac:	82 e0       	ldi	r24, 0x02	; 2
  ae:	89 27       	eor	r24, r25
  b0:	85 bb       	out	0x15, r24	; 21
	
	DDRB |= (1 << PB3);
  b2:	87 b3       	in	r24, 0x17	; 23
  b4:	88 60       	ori	r24, 0x08	; 8
  b6:	87 bb       	out	0x17, r24	; 23
  b8:	08 95       	ret

000000ba <init_Timer0>:
}

void init_Timer0()
{
	TCCR0 &= ~(1 << WGM00);
  ba:	83 b7       	in	r24, 0x33	; 51
  bc:	8f 7b       	andi	r24, 0xBF	; 191
  be:	83 bf       	out	0x33, r24	; 51
	TCCR0 &= ~(1 << WGM01);
  c0:	83 b7       	in	r24, 0x33	; 51
  c2:	87 7f       	andi	r24, 0xF7	; 247
  c4:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= (1 << COM00)|(1 << CS00)|(1 << CS01);
  c6:	83 b7       	in	r24, 0x33	; 51
  c8:	83 61       	ori	r24, 0x13	; 19
  ca:	83 bf       	out	0x33, r24	; 51
	
	for(TCNT0Var = 0; TCNT0Var <= 245; TCNT0Var++)
  cc:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
  d0:	5b c0       	rjmp	.+182    	; 0x188 <init_Timer0+0xce>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d2:	2f e7       	ldi	r18, 0x7F	; 127
  d4:	89 ea       	ldi	r24, 0xA9	; 169
  d6:	93 e0       	ldi	r25, 0x03	; 3
  d8:	21 50       	subi	r18, 0x01	; 1
  da:	80 40       	sbci	r24, 0x00	; 0
  dc:	90 40       	sbci	r25, 0x00	; 0
  de:	e1 f7       	brne	.-8      	; 0xd8 <init_Timer0+0x1e>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <init_Timer0+0x28>
  e2:	00 00       	nop
	{
		_delay_ms(100);
		PORTC ^= (1 << PC2);
  e4:	95 b3       	in	r25, 0x15	; 21
  e6:	84 e0       	ldi	r24, 0x04	; 4
  e8:	89 27       	eor	r24, r25
  ea:	85 bb       	out	0x15, r24	; 21
  ec:	2f e7       	ldi	r18, 0x7F	; 127
  ee:	89 ea       	ldi	r24, 0xA9	; 169
  f0:	93 e0       	ldi	r25, 0x03	; 3
  f2:	21 50       	subi	r18, 0x01	; 1
  f4:	80 40       	sbci	r24, 0x00	; 0
  f6:	90 40       	sbci	r25, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <init_Timer0+0x38>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <init_Timer0+0x42>
  fc:	00 00       	nop
		_delay_ms(100);
		PORTC ^= (1 << PC3);
  fe:	95 b3       	in	r25, 0x15	; 21
 100:	88 e0       	ldi	r24, 0x08	; 8
 102:	89 27       	eor	r24, r25
 104:	85 bb       	out	0x15, r24	; 21
 106:	2f e7       	ldi	r18, 0x7F	; 127
 108:	89 ea       	ldi	r24, 0xA9	; 169
 10a:	93 e0       	ldi	r25, 0x03	; 3
 10c:	21 50       	subi	r18, 0x01	; 1
 10e:	80 40       	sbci	r24, 0x00	; 0
 110:	90 40       	sbci	r25, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <init_Timer0+0x52>
 114:	00 c0       	rjmp	.+0      	; 0x116 <init_Timer0+0x5c>
 116:	00 00       	nop
		_delay_ms(100);
		PORTC ^= (1 << PC4);
 118:	95 b3       	in	r25, 0x15	; 21
 11a:	80 e1       	ldi	r24, 0x10	; 16
 11c:	89 27       	eor	r24, r25
 11e:	85 bb       	out	0x15, r24	; 21
 120:	2f e7       	ldi	r18, 0x7F	; 127
 122:	89 ea       	ldi	r24, 0xA9	; 169
 124:	93 e0       	ldi	r25, 0x03	; 3
 126:	21 50       	subi	r18, 0x01	; 1
 128:	80 40       	sbci	r24, 0x00	; 0
 12a:	90 40       	sbci	r25, 0x00	; 0
 12c:	e1 f7       	brne	.-8      	; 0x126 <init_Timer0+0x6c>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <init_Timer0+0x76>
 130:	00 00       	nop
		_delay_ms(100);
		PORTC ^= (1 << PC5);
 132:	95 b3       	in	r25, 0x15	; 21
 134:	80 e2       	ldi	r24, 0x20	; 32
 136:	89 27       	eor	r24, r25
 138:	85 bb       	out	0x15, r24	; 21
 13a:	2f e7       	ldi	r18, 0x7F	; 127
 13c:	89 ea       	ldi	r24, 0xA9	; 169
 13e:	93 e0       	ldi	r25, 0x03	; 3
 140:	21 50       	subi	r18, 0x01	; 1
 142:	80 40       	sbci	r24, 0x00	; 0
 144:	90 40       	sbci	r25, 0x00	; 0
 146:	e1 f7       	brne	.-8      	; 0x140 <init_Timer0+0x86>
 148:	00 c0       	rjmp	.+0      	; 0x14a <init_Timer0+0x90>
 14a:	00 00       	nop
		_delay_ms(100);
		PORTC ^= (1 << PC6);
 14c:	95 b3       	in	r25, 0x15	; 21
 14e:	80 e4       	ldi	r24, 0x40	; 64
 150:	89 27       	eor	r24, r25
 152:	85 bb       	out	0x15, r24	; 21
 154:	2f e7       	ldi	r18, 0x7F	; 127
 156:	89 ea       	ldi	r24, 0xA9	; 169
 158:	93 e0       	ldi	r25, 0x03	; 3
 15a:	21 50       	subi	r18, 0x01	; 1
 15c:	80 40       	sbci	r24, 0x00	; 0
 15e:	90 40       	sbci	r25, 0x00	; 0
 160:	e1 f7       	brne	.-8      	; 0x15a <init_Timer0+0xa0>
 162:	00 c0       	rjmp	.+0      	; 0x164 <init_Timer0+0xaa>
 164:	00 00       	nop
		_delay_ms(100);
		PORTC ^= (1 << PC7);
 166:	85 b3       	in	r24, 0x15	; 21
 168:	80 58       	subi	r24, 0x80	; 128
 16a:	85 bb       	out	0x15, r24	; 21
 16c:	2f e7       	ldi	r18, 0x7F	; 127
 16e:	89 ea       	ldi	r24, 0xA9	; 169
 170:	93 e0       	ldi	r25, 0x03	; 3
 172:	21 50       	subi	r18, 0x01	; 1
 174:	80 40       	sbci	r24, 0x00	; 0
 176:	90 40       	sbci	r25, 0x00	; 0
 178:	e1 f7       	brne	.-8      	; 0x172 <init_Timer0+0xb8>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <init_Timer0+0xc2>
 17c:	00 00       	nop
{
	TCCR0 &= ~(1 << WGM00);
	TCCR0 &= ~(1 << WGM01);
	TCCR0 |= (1 << COM00)|(1 << CS00)|(1 << CS01);
	
	for(TCNT0Var = 0; TCNT0Var <= 245; TCNT0Var++)
 17e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 182:	8f 5f       	subi	r24, 0xFF	; 255
 184:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 188:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 18c:	86 3f       	cpi	r24, 0xF6	; 246
 18e:	08 f4       	brcc	.+2      	; 0x192 <init_Timer0+0xd8>
 190:	a0 cf       	rjmp	.-192    	; 0xd2 <init_Timer0+0x18>
		_delay_ms(100);
		PORTC ^= (1 << PC7);
		_delay_ms(100);
	}
	
	TCNT0 = TCNT0Var;
 192:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 196:	82 bf       	out	0x32, r24	; 50
	TIMSK |= (1 << TOIE0);
 198:	89 b7       	in	r24, 0x39	; 57
 19a:	81 60       	ori	r24, 0x01	; 1
 19c:	89 bf       	out	0x39, r24	; 57
 19e:	08 95       	ret

000001a0 <main>:
}

int main(void)
{
	cli();
 1a0:	f8 94       	cli
	init_Ports();
 1a2:	0e 94 53 00 	call	0xa6	; 0xa6 <init_Ports>
	init_Timer0();
 1a6:	0e 94 5d 00 	call	0xba	; 0xba <init_Timer0>
	sei();
 1aa:	78 94       	sei
 1ac:	ff cf       	rjmp	.-2      	; 0x1ac <main+0xc>

000001ae <_exit>:
 1ae:	f8 94       	cli

000001b0 <__stop_program>:
 1b0:	ff cf       	rjmp	.-2      	; 0x1b0 <__stop_program>
